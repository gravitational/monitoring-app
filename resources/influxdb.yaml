---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: monitoring
    component: influxdb
  name: influxdb
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
      component: influxdb
  template:
    metadata:
      labels:
        app: monitoring
        component: influxdb
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      serviceAccountName: monitoring
      tolerations:
      - key: "gravitational.io/runlevel"
        value: system
        operator: Equal
        # allows to run on master nodes
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: watcher
        image: watcher:latest
        securityContext:
          runAsUser: -1
        args:
          - --mode=rollups --debug=true
        env:
          - name: INFLUXDB_ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: username
          - name: INFLUXDB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: influxdb
                key: password
          - name: INFLUXDB_GRAFANA_USERNAME
            valueFrom:
              secretKeyRef:
                name: grafana-influxdb-creds
                key: username
          - name: INFLUXDB_GRAFANA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-influxdb-creds
                key: password
          - name: INFLUXDB_TELEGRAF_USERNAME
            valueFrom:
              secretKeyRef:
                name: telegraf-influxdb-creds
                key: username
          - name: INFLUXDB_TELEGRAF_PASSWORD
            valueFrom:
              secretKeyRef:
                name: telegraf-influxdb-creds
                key: password
      - name: influxdb
        image: monitoring-influxdb:latest
        command:
          - /usr/bin/dumb-init
          - /influxdb/influxd
          - -config
          - /etc/influxdb/influxdb.toml
        volumeMounts:
        - mountPath: /etc/influxdb
          name: influxdb-config
        - mountPath: /data
          name: influxdb-storage
      volumes:
      - name: influxdb-config
        configMap:
          name: influxdb
      - name: influxdb-storage
        hostPath:
          path: /var/lib/data/influxdb
---
apiVersion: v1
kind: Service
metadata:
  labels: null
  name: influxdb
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 8083
  - name: api
    port: 8086
  selector:
    app: monitoring
    component: influxdb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb
  namespace: monitoring
data:
  influxdb.toml: |
    reporting-disabled = true
    bind-address = ":8088"

    [meta]
      dir = "/data/meta"
      retention-autocreate = true
      logging-enabled = true

    [data]
      dir = "/data/data"
      wal-dir = "/data/wal"
      wal-fsync-delay = "0s"
      index-version = "inmem"
      query-log-enabled = true
      cache-max-memory-size = 1073741824 # 1g
      cache-snapshot-memory-size = 26214400 # 25m
      cache-snapshot-write-cold-duration = "10m"
      compact-full-write-cold-duration = "4h"
      max-concurrent-compactions = 0
      max-index-log-file-size = "1m"
      max-series-per-database = 1000000
      max-values-per-tag = 100000
      trace-logging-enabled = false

    [coordinator]
      write-timeout = "10s"
      max-concurrent-queries = 0
      query-timeout = "0s"
      log-queries-after = "0s"
      max-select-point = 0
      max-select-series = 0
      max-select-buckets = 0

    [retention]
      enabled = true
      check-interval = "30m"

    [shard-precreation]
      enabled = true
      check-interval = "10m"
      advance-period = "30m"

    [monitor]
      store-enabled = true
      store-database = "_internal"
      store-interval = "10s"

    [subscriber]
      enabled = true
      http-timeout = "30s"
      insecure-skip-verify = false
      ca-certs = ""
      write-concurrency = 40
      write-buffer-size = 1000

    [http]
      enabled = true
      bind-address = ":8086"
      auth-enabled = true
      log-enabled = true
      write-tracing = false
      pprof-enabled = true
      https-enabled = false
      https-certificate = "/etc/ssl/influxdb.pem"
      https-private-key = "/etc/ssl/influxdb.key"
      max-row-limit = 0
      max-connection-limit = 0
      shared-secret = ""
      realm = "InfluxDB"
      unix-socket-enabled = false
      bind-socket = "/var/run/influxdb.sock"
      max-body-size = 25000000

    [ifql]
      enabled = false
      log-enabled = true
      bind-address = ":8082"

    [[graphite]]
      enabled = false
      bind-address = ":2003"
      database = "graphite"
      retention-policy = ""
      protocol = "tcp"
      batch-size = 5000
      batch-pending = 10
      batch-timeout = "1s"
      consistency-level = "one"
      separator = "."
      udp-read-buffer = 0

    [[collectd]]
      enabled = false
      bind-address = ":25826"
      database = "collectd"
      retention-policy = ""
      batch-size = 5000
      batch-pending = 10
      batch-timeout = "10s"
      read-buffer = 0
      typesdb = "/usr/share/collectd/types.db"
      security-level = "none"
      auth-file = "/etc/collectd/auth_file"

    [[opentsdb]]
      enabled = false
      bind-address = ":4242"
      database = "opentsdb"
      retention-policy = ""
      consistency-level = "one"
      tls-enabled = false
      certificate = "/etc/ssl/influxdb.pem"
      batch-size = 1000
      batch-pending = 5
      batch-timeout = "1s"
      log-point-errors = true

    [[udp]]
      enabled = false
      bind-address = ":8089"
      database = "udp"
      retention-policy = ""
      batch-size = 5000
      batch-pending = 10
      read-buffer = 0
      batch-timeout = "1s"
      precision = ""

    [continuous_queries]
      log-enabled = true
      enabled = true
      query-stats-enabled = false
      run-interval = "1s"
