apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    prometheus: k8s
  name: k8s
  namespace: monitoring
spec:
  alerting:
    alertmanagers:
    - name: alertmanager-main
      namespace: monitoring
      port: web
  baseImage: leader.telekube.local:5000/prometheus/prometheus
  nodeSelector:
    kubernetes.io/os: linux
    gravitational.io/k8s-role: master
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  # will be auto-scaled by the watcher in a multi-node cluster
  replicas: 1
  resources:
    requests:
      memory: 400Mi
  ruleSelector:
    matchLabels:
      prometheus: k8s
      role: alert-rules
  priorityClassName: monitoring-high-priority
  securityContext:
    fsGroup: 2000
    runAsNonRoot: true
    runAsUser: -1
  serviceAccountName: prometheus-k8s
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  retention: 30d
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: prometheus
              prometheus: k8s
  tolerations:
  # tolerate any taints
  - operator: "Exists"
  storage:
    hostPath:
      path: /var/lib/gravity/monitoring
    volumeClaimTemplate: {}
  additionalScrapeConfigs:
    name: prometheus-additional-scrape-configs
    key: additional-scrape-configs.yaml
  version: v2.19.2
