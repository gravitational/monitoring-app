---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-cfg
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s/web/grafana
    [paths]
    provisioning = /etc/grafana/provisioning
    data = /var/lib/grafana
    logs = /var/log/grafana
    [auth.anonymous]
    # enable anonymous access
    enabled = true
    [analytics]
    reporting_enabled = false
    check_for_updates = false
    [users]
    # Default UI theme ("dark" or "light")
    default_theme = dark
    [security]
    allow_embedding = true
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: monitoring
    component: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
      component: grafana
  template:
    metadata:
      labels:
        app: monitoring
        component: grafana
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      serviceAccountName: monitoring
      priorityClassName: monitoring-high-priority
      tolerations:
      # tolerate any taints
      - operator: "Exists"
      containers:
      - name: grafana
        image: monitoring-grafana:latest
        env:
          - name: GF_PATHS_CONFIG
            value: /etc/grafana/cfg/grafana.ini
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: password
          - name: INFLUXDB_USERNAME
            valueFrom:
              secretKeyRef:
                name: grafana-influxdb-creds
                key: username
          - name: INFLUXDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-influxdb-creds
                key: password
        volumeMounts:
          - name: config
            mountPath: /etc/grafana/cfg
          - name: datasources
            mountPath: /etc/grafana/provisioning/datasources
          - name: dashboards-cfg
            mountPath: /etc/grafana/provisioning/dashboards
      - name: watcher
        image: watcher:latest
        securityContext:
          runAsUser: -1
        args:
          - --mode=dashboards
        env:
          - name: GRAFANA_USERNAME
            valueFrom:
              secretKeyRef:
                name: grafana
                key: username
          - name: GRAFANA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: password
      volumes:
        - name: config
          configMap:
            name: grafana-cfg
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboards-cfg
          configMap:
            name: grafana-dashboards-cfg
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: Grafana
  name: grafana
  namespace: monitoring
spec:
  ports:
  - name: grafana
    port: 3000
  selector:
    app: monitoring
    component: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  influxdb.yaml: |
    apiVersion: 1
    datasources:
      - name: influxdb-datasource
        type: influxdb
        access: proxy
        url: "http://influxdb.monitoring.svc:8086"
        user: "$INFLUXDB_USERNAME"
        secureJsonData:
          password: "$INFLUXDB_PASSWORD"
        database: "k8s"
        isDefault: true
        version: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-cfg
  namespace: monitoring
data:
  configmap.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: false
        options:
          path: /var/lib/grafana/dashboards
