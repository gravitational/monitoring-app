---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-cfg
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    root_url = %(protocol)s://%(domain)s/web/grafana
    [paths]
    provisioning = /etc/grafana/provisioning
    data = /var/lib/grafana
    logs = /var/log/grafana
    [auth.anonymous]
    # enable anonymous access
    enabled = true
    [analytics]
    reporting_enabled = false
    check_for_updates = false
    [users]
    # Default UI theme ("dark" or "light")
    default_theme = light
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: monitoring
    component: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitoring
      component: grafana
  template:
    metadata:
      labels:
        app: monitoring
        component: grafana
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: monitoring
      tolerations:
      - key: "gravitational.io/runlevel"
        value: system
        operator: Equal
        # allows to run on master nodes
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: grafana
        image: monitoring-grafana:latest
        ports:
        - containerPort: 3000
          name: http
        env:
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: password
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/grafana/cfg
          name: grafana-cfg
          readOnly: false
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dashboards
          readOnly: false
      - name: watcher
        image: watcher:latest
        args:
          - --mode=dashboards
        env:
          - name: GRAFANA_USERNAME
            valueFrom:
              secretKeyRef:
                name: grafana
                key: username
          - name: GRAFANA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: password
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: monitoring
      volumes:
      - name: grafana-cfg
        configMap:
          name: grafana-cfg
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          secretName: grafana-datasources
      - configMap:
          name: grafana-dashboards
        name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: monitoring
    component: grafana
  name: grafana
  namespace: monitoring
spec:
  ports:
  - name: http
    port: 3000
    targetPort: http
  selector:
    app: monitoring
    component: grafana
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: grafana
  namespace: monitoring
spec:
  endpoints:
  - interval: 15s
    port: http
  selector:
    matchLabels:
      app: monitoring
      component: grafana
---
apiVersion: v1
data:
  dashboards.yaml: |-
    {
        "apiVersion": 1,
        "providers": [
            {
                "folder": "",
                "name": "0",
                "options": {
                  "path": "/etc/grafana/dashboards"
                },
                "orgId": 1,
                "type": "file"
            }
        ]
    }
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana
  namespace: monitoring
type: Opaque
data:
  username: YWRtaW4=
  password: cGFzc3dvcmQtZ29lcy1oZXJlCg==
---
apiVersion: v1
data:
  prometheus.yaml: ewogICAgImFwaVZlcnNpb24iOiAxLAogICAgImRhdGFzb3VyY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgImFjY2VzcyI6ICJwcm94eSIsCiAgICAgICAgICAgICJlZGl0YWJsZSI6IGZhbHNlLAogICAgICAgICAgICAibmFtZSI6ICJwcm9tZXRoZXVzIiwKICAgICAgICAgICAgIm9yZ0lkIjogMSwKICAgICAgICAgICAgInR5cGUiOiAicHJvbWV0aGV1cyIsCiAgICAgICAgICAgICJ1cmwiOiAiaHR0cDovL3Byb21ldGhldXMtazhzLm1vbml0b3Jpbmcuc3ZjOjkwOTAiLAogICAgICAgICAgICAidmVyc2lvbiI6IDEKICAgICAgICB9CiAgICBdCn0=
kind: Secret
metadata:
  name: grafana-datasources
  namespace: monitoring
type: Opaque
