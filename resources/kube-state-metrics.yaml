---
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    k8s-app: kube-state-metrics
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
  - name: http-metrics
    port: 8080
    targetPort: http-metrics
    protocol: TCP
  - name: telemetry
    port: 8081
    targetPort: telemetry
    protocol: TCP
  selector:
    k8s-app: kube-state-metrics
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-state-metrics
  namespace: monitoring
  labels:
    app: monitoring
    component: kube-state-metrics
spec:
  selector:
    matchLabels:
      app: monitoring
      component: kube-state-metrics
  template:
    metadata:
      labels:
        app: monitoring
        component: kube-state-metrics
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      nodeSelector:
        gravitational.io/k8s-role: master
      serviceAccountName: kube-state-metrics
      tolerations:
        # allows to run on master nodes
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: kube-state-metrics
        image: monitoring-kube-state-metrics:latest
        ports:
        - name: http-metrics
          containerPort: 8080
        - name: telemetry
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
